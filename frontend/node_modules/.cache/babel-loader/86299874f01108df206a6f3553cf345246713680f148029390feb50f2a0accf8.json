{"ast":null,"code":"import axios from \"axios\";\n\n// Base API URL\nconst BASE_URL = \"http://127.0.0.1:5000\";\nconst api = axios.create({\n  baseURL: \"http://127.0.0.1:5000\",\n  withCredentials: true,\n  // Include credentials in requests\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\n\n// Fetch diagnosis results\nexport const fetchDiagnosis = async () => {\n  try {\n    const response = await axios.get(`${BASE_URL}/diagnose`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching diagnosis:\", error);\n    throw error;\n  }\n};\n\n// Fetch trend chart data\nexport const fetchTrendChart = async () => {\n  try {\n    const response = await axios.get(`${BASE_URL}/trend_chart`);\n    return response.data; // Ensure backend provides chart data as JSON\n  } catch (error) {\n    console.error(\"Error fetching trend chart:\", error);\n    throw error;\n  }\n};\n\n// Send chat message\nexport const sendChatMessage = async message => {\n  try {\n    const response = await axios.post(`${BASE_URL}/chat`, {\n      message\n    }, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error in API call:\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","BASE_URL","api","create","baseURL","withCredentials","headers","fetchDiagnosis","response","get","data","error","console","fetchTrendChart","sendChatMessage","message","post"],"sources":["/Users/medsidd/mental_health_app/frontend/src/utils/api.js"],"sourcesContent":["import axios from \"axios\";\n\n// Base API URL\nconst BASE_URL = \"http://127.0.0.1:5000\";\n\nconst api = axios.create({\n    baseURL: \"http://127.0.0.1:5000\",\n    withCredentials: true, // Include credentials in requests\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  });\n\n// Fetch diagnosis results\nexport const fetchDiagnosis = async () => {\n  try {\n    const response = await axios.get(`${BASE_URL}/diagnose`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching diagnosis:\", error);\n    throw error;\n  }\n};\n\n// Fetch trend chart data\nexport const fetchTrendChart = async () => {\n  try {\n    const response = await axios.get(`${BASE_URL}/trend_chart`);\n    return response.data; // Ensure backend provides chart data as JSON\n  } catch (error) {\n    console.error(\"Error fetching trend chart:\", error);\n    throw error;\n  }\n};\n\n// Send chat message\nexport const sendChatMessage = async (message) => {\n    try {\n      const response = await axios.post(\n        `${BASE_URL}/chat`,\n        { message },\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n      return response.data;\n    } catch (error) {\n      console.error(\"Error in API call:\", error);\n      throw error;\n    }\n  };"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,QAAQ,GAAG,uBAAuB;AAExC,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACrBC,OAAO,EAAE,uBAAuB;EAChCC,eAAe,EAAE,IAAI;EAAE;EACvBC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEJ;AACA,OAAO,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;EACxC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,GAAGR,QAAQ,WAAW,CAAC;IACxD,OAAOO,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACjD,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAME,eAAe,GAAG,MAAAA,CAAA,KAAY;EACzC,IAAI;IACF,MAAML,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,GAAGR,QAAQ,cAAc,CAAC;IAC3D,OAAOO,QAAQ,CAACE,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACnD,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMG,eAAe,GAAG,MAAOC,OAAO,IAAK;EAC9C,IAAI;IACF,MAAMP,QAAQ,GAAG,MAAMR,KAAK,CAACgB,IAAI,CAC/B,GAAGf,QAAQ,OAAO,EAClB;MAAEc;IAAQ,CAAC,EACX;MACET,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CACF,CAAC;IACD,OAAOE,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC1C,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}